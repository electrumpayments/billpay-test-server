{
	"variables": [],
	"info": {
		"name": "BillpayInterface Manual",
		"_postman_id": "696a6498-75eb-641f-5c1d-f6564de9dcb9",
		"description": "",
		"schema": "https://schema.getpostman.com/json/collection/v2.0.0/collection.json"
	},
	"item": [
		{
			"name": "AccountLookup",
			"description": "",
			"item": [
				{
					"name": "AccountLookupRequest Test 1",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": "tests[\"Status code is 200\"] = responseCode.code === 200;\n\nvar jsonData = JSON.parse(responseBody);\ntests[\"Correct id returned\"] = jsonData.id === environment.requestId;\n\n\npostman.setEnvironmentVariable(\"accountAmount\", jsonData.account.balance.amount);\n\npostman.setEnvironmentVariable(\"thirdPartyId1\", jsonData.thirdPartyIdentifiers[0].institutionId);\npostman.setEnvironmentVariable(\"thirdPartyTranRef1\", jsonData.thirdPartyIdentifiers[0].transactionIdentifier);\n\npostman.setEnvironmentVariable(\"thirdPartyId2\", jsonData.thirdPartyIdentifiers[1].institutionId);\npostman.setEnvironmentVariable(\"thirdPartyTranRef2\", jsonData.thirdPartyIdentifiers[1].transactionIdentifier);\n\npostman.setEnvironmentVariable(\"thirdPartyId3\", jsonData.thirdPartyIdentifiers[2].institutionId);\npostman.setEnvironmentVariable(\"thirdPartyTranRef3\", jsonData.thirdPartyIdentifiers[2].transactionIdentifier);\n\npostman.setEnvironmentVariable(\"thirdPartyId4\", jsonData.thirdPartyIdentifiers[3].institutionId);\npostman.setEnvironmentVariable(\"thirdPartyTranRef4\", jsonData.thirdPartyIdentifiers[3].transactionIdentifier);"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"exec": "function _p8(s) {\n        var p = (Math.random().toString(16)+\"000000000\").substr(2,8);\n        return s ? \"-\" + p.substr(0,4) + \"-\" + p.substr(4,4) : p ;\n    }\n\nfunction uuid() {\n    \n    return _p8() + _p8(true) + _p8(true) + _p8();\n}\n\nvar dateTime = new Date().toISOString();\npostman.setEnvironmentVariable(\"reqDateTime\", dateTime);\n\npostman.setEnvironmentVariable(\"rrn\",_p8());\npostman.setEnvironmentVariable(\"requestId\",uuid());\npostman.setEnvironmentVariable(\"senderTranRef\",_p8());\npostman.setEnvironmentVariable(\"clientTranRef\",_p8());\n\n"
							}
						}
					],
					"request": {
						"url": "{{url}}/accountLookups/{{requestId}}",
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Basic dXNlcm5hbWU6cGFzc3N3b3Jk",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"accountRef\": \"{{accountRef}}\",\n    \"client\": {\n        \"id\": \"{{clientId}}\",\n        \"name\": \"{{clientName}}\"\n    },\n    \"id\": \"{{requestId}}\",\n    \"originator\": {\n        \"institution\": {\n            \"id\": \"{{senderInstId}}\",\n            \"name\": \"{{senderInstName}}\"\n        },\n        \"merchant\": {\n            \"merchantId\": \"{{merchantId}}\",\n            \"merchantName\": {\n                \"city\": \"{{merchantCity}}\",\n                \"country\": \"{{merchantCountry}}\",\n                \"name\": \"{{merchantName}}\",\n                \"region\": \"{{merchantRegion}}\"\n            },\n            \"merchantType\": \"{{merchantType}}\"\n        },\n        \"terminalId\": \"{{terminalId}}\"\n    },\n    \"reciever\": {\n        \"id\": \"{{recieverId}}\",\n        \"name\": \"{{recieverName}}\"\n    },\n    \"settlementEntity\": {\n        \"id\": \"{{settlementEntityId}}\",\n        \"name\": \"{{settlementEntityName}}\"\n    },\n    \"thirdPartyIdentifiers\": [\n        {\n            \"institutionId\": \"{{senderInstId}}\",\n            \"transactionIdentifier\": \"{{senderTranRef}}\"\n        },\n        {\n            \"institutionId\": \"{{clientId}}\",\n            \"transactionIdentifier\": \"{{clientTranRef}}\"\n        }\n    ],\n    \"time\": \"{{reqDateTime}}\"\n}"
						},
						"description": "Test AccountLookupRequest"
					},
					"response": []
				},
				{
					"name": "AccountLookupRequest Test 2 (Duplicate ID)",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": "tests[\"Status code is 400\"] = responseCode.code === 400;\n\nvar jsonData = JSON.parse(responseBody);\ntests[\"Correct error type\"] = jsonData.errorType === environment.duplicateRecordErrorType"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"exec": "function _p8(s) {\n        var p = (Math.random().toString(16)+\"000000000\").substr(2,8);\n        return s ? \"-\" + p.substr(0,4) + \"-\" + p.substr(4,4) : p ;\n    }\n\nfunction uuid() {\n    \n    return _p8() + _p8(true) + _p8(true) + _p8();\n}\n\nvar dateTime = new Date().toISOString();\npostman.setEnvironmentVariable(\"reqDateTime\", dateTime);\n\npostman.setEnvironmentVariable(\"rrn\",_p8());\npostman.setEnvironmentVariable(\"senderTranRef\",_p8());\npostman.setEnvironmentVariable(\"clientTranRef\",_p8());\n\n"
							}
						}
					],
					"request": {
						"url": "{{url}}/accountLookups/{{requestId}}",
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Basic dXNlcm5hbWU6cGFzc3N3b3Jk",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"accountRef\": \"{{accountRef}}\",\n    \"client\": {\n        \"id\": \"{{clientId}}\",\n        \"name\": \"{{clientName}}\"\n    },\n    \"id\": \"{{requestId}}\",\n    \"originator\": {\n        \"institution\": {\n            \"id\": \"{{senderInstId}}\",\n            \"name\": \"{{senderInstName}}\"\n        },\n        \"merchant\": {\n            \"merchantId\": \"{{merchantId}}\",\n            \"merchantName\": {\n                \"city\": \"{{merchantCity}}\",\n                \"country\": \"{{merchantCountry}}\",\n                \"name\": \"{{merchantName}}\",\n                \"region\": \"{{merchantRegion}}\"\n            },\n            \"merchantType\": \"{{merchantType}}\"\n        },\n        \"terminalId\": \"{{terminalId}}\"\n    },\n    \"reciever\": {\n        \"id\": \"{{recieverId}}\",\n        \"name\": \"{{recieverName}}\"\n    },\n    \"settlementEntity\": {\n        \"id\": \"{{settlementEntityId}}\",\n        \"name\": \"{{settlementEntityName}}\"\n    },\n    \"thirdPartyIdentifiers\": [\n        {\n            \"institutionId\": \"{{senderInstId}}\",\n            \"transactionIdentifier\": \"{{senderTranRef}}\"\n        },\n        {\n            \"institutionId\": \"{{clientId}}\",\n            \"transactionIdentifier\": \"{{clientTranRef}}\"\n        }\n    ],\n    \"time\": \"{{reqDateTime}}\"\n}"
						},
						"description": "Test AccountLookupRequest with a duplicated UUID"
					},
					"response": []
				},
				{
					"name": "AccountLookupRequest Test 2 (Format Exception)",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": "tests[\"Status code is 400\"] = responseCode.code === 400;\n\nvar jsonData = JSON.parse(responseBody);\ntests[\"Correct error type\"] = jsonData.errorType === environment.formatErrorType"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"exec": "function _p8(s) {\n        var p = (Math.random().toString(16)+\"000000000\").substr(2,8);\n        return s ? \"-\" + p.substr(0,4) + \"-\" + p.substr(4,4) : p ;\n    }\n\nfunction uuid() {\n    \n    return _p8() + _p8(true) + _p8(true) + _p8();\n}\n\nvar dateTime = new Date().toISOString();\npostman.setEnvironmentVariable(\"reqDateTime\", dateTime);\n\npostman.setEnvironmentVariable(\"rrn\",_p8());\npostman.setEnvironmentVariable(\"requestId\",uuid());\npostman.setEnvironmentVariable(\"senderTranRef\",_p8());\npostman.setEnvironmentVariable(\"clientTranRef\",_p8());\n"
							}
						}
					],
					"request": {
						"url": "{{url}}/accountLookups/{{requestId}}",
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Basic dXNlcm5hbWU6cGFzc3N3b3Jk",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"accountRef\": \"{{accountRef}}\",\n    \"client\": {\n        \"id\": \"wiz8938\",\n        \"name\": \"{{clientName}}\"\n    },\n    \"id\": \"{{requestId}}\",\n    \"originator\": {\n        \"institution\": {\n            \"id\": \"{{senderInstId}}\",\n            \"name\": \"{{senderInstName}}\"\n        },\n        \"merchant\": {\n            \"merchantId\": \"{{merchantId}}\",\n            \"merchantName\": {\n                \"city\": \"{{merchantCity}}the City of a Thousand Smells\",\n                \"country\": \"{{merchantCountry}}\",\n                \"name\": \"{{merchantName}}\",\n                \"region\": \"{{merchantRegion}}\"\n            },\n            \"merchantType\": \"{{merchantType}}\"\n        },\n        \"terminalId\": \"{{terminalId}}\"\n    },\n    \"reciever\": {\n        \"id\": \"{{recieverId}}\",\n        \"name\": \"{{recieverName}}\"\n    },\n    \"settlementEntity\": {\n        \"id\": \"{{settlementEntityId}}\",\n        \"name\": \"{{settlementEntityName}}\"\n    },\n    \"thirdPartyIdentifiers\": [\n        {\n            \"institutionId\": \"{{senderInstId}}\",\n            \"transactionIdentifier\": \"{{senderTranRef}}\"\n        },\n        {\n            \"institutionId\": \"{{clientId}}\",\n            \"transactionIdentifier\": \"{{clientTranRef}}\"\n        }\n    ]\n}"
						},
						"description": "Test AccountLookupRequest with missing field values"
					},
					"response": []
				},
				{
					"name": "PaymentConfirmation (No preceeding request)",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": "tests[\"Status code is 400\"] = responseCode.code === 400;\n\n\nvar jsonData = JSON.parse(responseBody);\ntests[\"Correct error type\"] = jsonData.errorType === environment.unableToLocateRecordErrorType;"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"exec": "function _p8(s) {\n        var p = (Math.random().toString(16)+\"000000000\").substr(2,8);\n        return s ? \"-\" + p.substr(0,4) + \"-\" + p.substr(4,4) : p ;\n    }\n\nfunction uuid() {\n    \n    return _p8() + _p8(true) + _p8(true) + _p8();\n}\n\nfunction halve(n) {\n    \n    return Math.floor(n/2);\n}\n\nvar dateTime = new Date().toISOString();\npostman.setEnvironmentVariable(\"adviceDateTime\", dateTime);\n\npostman.setEnvironmentVariable(\"rrn\",_p8());\npostman.setEnvironmentVariable(\"adviceId\",uuid());\npostman.setEnvironmentVariable(\"tenderAmount\",halve(environment.requestAmount));\n"
							}
						}
					],
					"request": {
						"url": "{{url}}/payments/{{requestId}}/confirmations/{{adviceId}}",
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Basic dXNlcm5hbWU6cGFzc3N3b3Jk",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"id\" : \"{{adviceId}}\",\n  \"requestId\" : \"{{requestId}}\",\n  \"time\" : \"{{adviceDateTime}}\",\n  \"linkData\" : \"{{linkData}}\",\n  \"tenders\" : [ {\n    \"accountType\" : \"{{tenderAccountType}}\",\n    \"amount\" : {\n      \"amount\" : {{tenderAmount}},\n      \"currency\" : \"{{currency}}\"\n    },\n    \"cardNumber\" : \"{{tenderCardNumber}}1\",\n    \"reference\" : \"{{tenderRef}}1\",\n    \"tenderType\" : \"{{tenderTypeCash}}\"\n  }, {\n    \"accountType\" : \"DEFAULT\",\n    \"amount\" : {\n      \"amount\" : {{tenderAmount}},\n      \"currency\" : \"{{currency}}\"\n    },\n    \"cardNumber\" : \"{{tenderCardNumber}}2\",\n    \"reference\" : \"{{tenderRef}}2\",\n    \"tenderType\" : \"{{tenderTypeCard}}\"\n  } ],\n  \"thirdPartyIdentifiers\": [\n        {\n            \"institutionId\": \"{{thirdPartyId1}}\",\n            \"transactionIdentifier\": \"{{thirdPartyTranRef1}}\"\n        },\n        {\n            \"institutionId\": \"{{thirdPartyId2}}\",\n            \"transactionIdentifier\": \"{{thirdPartyTranRef2}}\"\n        },\n        {\n            \"institutionId\": \"{{thirdPartyId3}}\",\n            \"transactionIdentifier\": \"{{thirdPartyTranRef3}}\"\n        },\n        {\n            \"institutionId\": \"{{thirdPartyId4}}\",\n            \"transactionIdentifier\": \"{{thirdPartyTranRef4}}\"\n        }\n    ]\n}"
						},
						"description": "Test confirm payment with no preceding request"
					},
					"response": []
				}
			]
		},
		{
			"name": "Payment and Confirmation",
			"description": "",
			"item": [
				{
					"name": "AccountLookupRequest",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": "tests[\"Status code is 200\"] = responseCode.code === 200;\n\nvar jsonData = JSON.parse(responseBody);\ntests[\"Correct id returned\"] = jsonData.id === environment.requestId;\n\n\npostman.setEnvironmentVariable(\"accountAmount\", jsonData.account.balance.amount);\n\npostman.setEnvironmentVariable(\"thirdPartyId1\", jsonData.thirdPartyIdentifiers[0].institutionId);\npostman.setEnvironmentVariable(\"thirdPartyTranRef1\", jsonData.thirdPartyIdentifiers[0].transactionIdentifier);\n\npostman.setEnvironmentVariable(\"thirdPartyId2\", jsonData.thirdPartyIdentifiers[1].institutionId);\npostman.setEnvironmentVariable(\"thirdPartyTranRef2\", jsonData.thirdPartyIdentifiers[1].transactionIdentifier);\n\npostman.setEnvironmentVariable(\"thirdPartyId3\", jsonData.thirdPartyIdentifiers[2].institutionId);\npostman.setEnvironmentVariable(\"thirdPartyTranRef3\", jsonData.thirdPartyIdentifiers[2].transactionIdentifier);\n\npostman.setEnvironmentVariable(\"thirdPartyId4\", jsonData.thirdPartyIdentifiers[3].institutionId);\npostman.setEnvironmentVariable(\"thirdPartyTranRef4\", jsonData.thirdPartyIdentifiers[3].transactionIdentifier);\n"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"exec": "function _p8(s) {\n        var p = (Math.random().toString(16)+\"000000000\").substr(2,8);\n        return s ? \"-\" + p.substr(0,4) + \"-\" + p.substr(4,4) : p ;\n    }\n\nfunction uuid() {\n    \n    return _p8() + _p8(true) + _p8(true) + _p8();\n}\n\nvar dateTime = new Date().toISOString();\npostman.setEnvironmentVariable(\"reqDateTime\", dateTime);\n\npostman.setEnvironmentVariable(\"rrn\",_p8());\npostman.setEnvironmentVariable(\"requestId\",uuid());\npostman.setEnvironmentVariable(\"senderTranRef\",_p8());\npostman.setEnvironmentVariable(\"clientTranRef\",_p8());\n"
							}
						}
					],
					"request": {
						"url": "{{url}}/accountLookups/{{requestId}}",
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Basic dXNlcm5hbWU6cGFzc3N3b3Jk",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"accountRef\": \"{{accountRef}}\",\n    \"client\": {\n        \"id\": \"{{clientId}}\",\n        \"name\": \"{{clientName}}\"\n    },\n    \"id\": \"{{requestId}}\",\n    \"originator\": {\n        \"institution\": {\n            \"id\": \"{{senderInstId}}\",\n            \"name\": \"{{senderInstName}}\"\n        },\n        \"merchant\": {\n            \"merchantId\": \"{{merchantId}}\",\n            \"merchantName\": {\n                \"city\": \"{{merchantCity}}\",\n                \"country\": \"{{merchantCountry}}\",\n                \"name\": \"{{merchantName}}\",\n                \"region\": \"{{merchantRegion}}\"\n            },\n            \"merchantType\": \"{{merchantType}}\"\n        },\n        \"terminalId\": \"{{terminalId}}\"\n    },\n    \"reciever\": {\n        \"id\": \"{{recieverId}}\",\n        \"name\": \"{{recieverName}}\"\n    },\n    \"settlementEntity\": {\n        \"id\": \"{{settlementEntityId}}\",\n        \"name\": \"{{settlementEntityName}}\"\n    },\n    \"thirdPartyIdentifiers\": [\n        {\n            \"institutionId\": \"{{senderInstId}}\",\n            \"transactionIdentifier\": \"{{senderTranRef}}\"\n        },\n        {\n            \"institutionId\": \"{{clientId}}\",\n            \"transactionIdentifier\": \"{{clientTranRef}}\"\n        }\n    ],\n    \"time\": \"{{reqDateTime}}\"\n}"
						},
						"description": ""
					},
					"response": []
				},
				{
					"name": "PaymentRequest",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": "tests[\"Status code is 200\"] = responseCode.code === 200;\n\nvar jsonData = JSON.parse(responseBody);\ntests[\"Correct id returned\"] = jsonData.id === environment.requestId;\n\n\npostman.setEnvironmentVariable(\"issuerReference\", jsonData.slipData.issuerReference);\n\n\npostman.setEnvironmentVariable(\"thirdPartyId1\", jsonData.thirdPartyIdentifiers[0].institutionId);\npostman.setEnvironmentVariable(\"thirdPartyTranRef1\", jsonData.thirdPartyIdentifiers[0].transactionIdentifier);\n\npostman.setEnvironmentVariable(\"thirdPartyId2\", jsonData.thirdPartyIdentifiers[1].institutionId);\npostman.setEnvironmentVariable(\"thirdPartyTranRef2\", jsonData.thirdPartyIdentifiers[1].transactionIdentifier);\n\npostman.setEnvironmentVariable(\"thirdPartyId3\", jsonData.thirdPartyIdentifiers[2].institutionId);\npostman.setEnvironmentVariable(\"thirdPartyTranRef3\", jsonData.thirdPartyIdentifiers[2].transactionIdentifier);\n\npostman.setEnvironmentVariable(\"thirdPartyId4\", jsonData.thirdPartyIdentifiers[3].institutionId);\npostman.setEnvironmentVariable(\"thirdPartyTranRef4\", jsonData.thirdPartyIdentifiers[3].transactionIdentifier);"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"exec": "function _p8(s) {\n        var p = (Math.random().toString(16)+\"000000000\").substr(2,8);\n        return s ? \"-\" + p.substr(0,4) + \"-\" + p.substr(4,4) : p ;\n    }\n\nfunction uuid() {\n    \n    return _p8() + _p8(true) + _p8(true) + _p8();\n}\n\nfunction halve(n) {\n    \n    return Math.floor(n/2);\n}\n\nvar dateTime = new Date().toISOString();\npostman.setEnvironmentVariable(\"reqDateTime\", dateTime);\n\nvar rrn = _p8()\npostman.setEnvironmentVariable(\"rrn\",rrn);\npostman.setEnvironmentVariable(\"requestRrn\",rrn);\npostman.setEnvironmentVariable(\"senderTranRef\",_p8());\npostman.setEnvironmentVariable(\"clientTranRef\",_p8());\n\npostman.setEnvironmentVariable(\"requestId\",uuid());\n\npostman.setEnvironmentVariable(\"requestAmount\",halve(environment.accountAmount));\n"
							}
						}
					],
					"request": {
						"url": "{{url}}/payments/{{requestId}}",
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Basic dXNlcm5hbWU6cGFzc3N3b3Jk",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"accountRef\": \"{{accountRef}}\",\n    \"client\": {\n        \"id\": \"{{clientId}}\",\n        \"name\": \"{{clientName}}\"\n    },\n    \"id\": \"{{requestId}}\",\n    \"originator\": {\n        \"institution\": {\n            \"id\": \"{{senderInstId}}\",\n            \"name\": \"{{senderInstName}}\"\n        },\n        \"merchant\": {\n            \"merchantId\": \"{{merchantId}}\",\n            \"merchantName\": {\n                \"city\": \"{{merchantCity}}\",\n                \"country\": \"{{merchantCountry}}\",\n                \"name\": \"{{merchantName}}\",\n                \"region\": \"{{merchantRegion}}\"\n            },\n            \"merchantType\": \"{{merchantType}}\"\n        },\n        \"terminalId\": \"{{terminalId}}\"\n    },\n    \"reciever\": {\n        \"id\": \"{{recieverId}}\",\n        \"name\": \"{{recieverName}}\"\n    },\n    \"requestAmount\": {\n        \"amount\": \"{{requestAmount}}\",\n        \"currency\": \"{{currency}}\"\n    },\n    \"settlementEntity\": {\n        \"id\": \"{{settlementEntityId}}\",\n        \"name\": \"{{settlementEntityName}}\"\n    },\n    \"thirdPartyIdentifiers\": [\n        {\n            \"institutionId\": \"{{senderInstId}}\",\n            \"transactionIdentifier\": \"{{senderTranRef}}\"\n        },\n        {\n            \"institutionId\": \"{{clientId}}\",\n            \"transactionIdentifier\": \"{{clientTranRef}}\"\n        }\n    ],\n    \"time\": \"{{reqDateTime}}\"\n}"
						},
						"description": "Test PaymentRequest"
					},
					"response": []
				},
				{
					"name": "PaymentConfirmation",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": "tests[\"Status code is 202\"] = responseCode.code === 202;\n\n\n"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"exec": "function _p8(s) {\n        var p = (Math.random().toString(16)+\"000000000\").substr(2,8);\n        return s ? \"-\" + p.substr(0,4) + \"-\" + p.substr(4,4) : p ;\n    }\n\nfunction uuid() {\n    \n    return _p8() + _p8(true) + _p8(true) + _p8();\n}\n\nfunction halve(n) {\n    \n    return Math.floor(n/2);\n}\n\nvar dateTime = new Date().toISOString();\npostman.setEnvironmentVariable(\"adviceDateTime\", dateTime);\n\npostman.setEnvironmentVariable(\"rrn\",_p8());\npostman.setEnvironmentVariable(\"adviceId\",uuid());\npostman.setEnvironmentVariable(\"tenderAmount\",halve(environment.requestAmount));\n"
							}
						}
					],
					"request": {
						"url": "{{url}}/payments/{{requestId}}/confirmations/{{adviceId}}",
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Basic dXNlcm5hbWU6cGFzc3N3b3Jk",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"id\" : \"{{adviceId}}\",\n  \"requestId\" : \"{{requestId}}\",\n  \"time\" : \"{{adviceDateTime}}\",\n  \"linkData\" : \"{{linkData}}\",\n  \"tenders\" : [ {\n    \"accountType\" : \"{{tenderAccountType}}\",\n    \"amount\" : {\n      \"amount\" : {{tenderAmount}},\n      \"currency\" : \"{{currency}}\"\n    },\n    \"cardNumber\" : \"{{tenderCardNumber}}1\",\n    \"reference\" : \"{{tenderRef}}1\",\n    \"tenderType\" : \"{{tenderTypeCash}}\"\n  }, {\n    \"accountType\" : \"DEFAULT\",\n    \"amount\" : {\n      \"amount\" : {{tenderAmount}},\n      \"currency\" : \"{{currency}}\"\n    },\n    \"cardNumber\" : \"{{tenderCardNumber}}2\",\n    \"reference\" : \"{{tenderRef}}2\",\n    \"tenderType\" : \"{{tenderTypeCard}}\"\n  } ],\n  \"thirdPartyIdentifiers\": [\n        {\n            \"institutionId\": \"{{thirdPartyId1}}\",\n            \"transactionIdentifier\": \"{{thirdPartyTranRef1}}\"\n        },\n        {\n            \"institutionId\": \"{{thirdPartyId2}}\",\n            \"transactionIdentifier\": \"{{thirdPartyTranRef2}}\"\n        },\n        {\n            \"institutionId\": \"{{thirdPartyId3}}\",\n            \"transactionIdentifier\": \"{{thirdPartyTranRef3}}\"\n        },\n        {\n            \"institutionId\": \"{{thirdPartyId4}}\",\n            \"transactionIdentifier\": \"{{thirdPartyTranRef4}}\"\n        }\n    ]\n}"
						},
						"description": "Test confirm payment"
					},
					"response": []
				},
				{
					"name": "PaymentReversal",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": "tests[\"Status code is 400\"] = responseCode.code === 400;\n\nvar jsonData = JSON.parse(responseBody);\ntests[\"Correct error type\"] = jsonData.errorType === environment.accountAlreadySettledErrorType;"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"exec": "function _p8(s) {\n        var p = (Math.random().toString(16)+\"000000000\").substr(2,8);\n        return s ? \"-\" + p.substr(0,4) + \"-\" + p.substr(4,4) : p ;\n    }\n\nfunction uuid() {\n    \n    return _p8() + _p8(true) + _p8(true) + _p8();\n}\n\nfunction halve(n) {\n    \n    return Math.floor(n/2);\n}\n\nvar dateTime = new Date().toISOString();\npostman.setEnvironmentVariable(\"adviceDateTime\", dateTime);\n\npostman.setEnvironmentVariable(\"rrn\",_p8());\npostman.setEnvironmentVariable(\"adviceId\",uuid());\npostman.setEnvironmentVariable(\"tenderAmount\",halve(environment.requestAmount));\n"
							}
						}
					],
					"request": {
						"url": "{{url}}/payments/{{requestId}}/reversals/{{adviceId}}",
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Basic dXNlcm5hbWU6cGFzc3N3b3Jk",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"id\": \"{{adviceId}}\",\n    \"linkData\": \"{{linkData}}\",\n    \"paymentRequest\": {\n        \"accountRef\": \"{{accountRef}}\",\n        \"client\": {\n            \"id\": \"{{clientId}}\",\n            \"name\": \"{{clientName}}\"\n        },\n        \"id\": \"{{requestId}}\",\n        \"originator\": {\n            \"institution\": {\n                \"id\": \"{{senderInstId}}\",\n                \"name\": \"{{senderInstName}}\"\n            },\n            \"merchant\": {\n                \"merchantId\": \"{{merchantId}}\",\n                \"merchantName\": {\n                    \"city\": \"{{merchantCity}}\",\n                    \"country\": \"{{merchantCountry}}\",\n                    \"name\": \"{{merchantName}}\",\n                    \"region\": \"{{merchantRegion}}\"\n                },\n                \"merchantType\": \"{{merchantType}}\"\n            },\n            \"terminalId\": \"{{terminalId}}\"\n        },\n        \"reciever\": {\n            \"id\": \"{{recieverId}}\",\n            \"name\": \"{{recieverName}}\"\n        },\n        \"requestAmount\": {\n            \"amount\": \"{{requestAmount}}\",\n            \"currency\": \"{{currency}}\"\n        },\n        \"settlementEntity\": {\n            \"id\": \"{{settlementEntityId}}\",\n            \"name\": \"{{settlementEntityName}}\"\n        },\n        \"thirdPartyIdentifiers\": [\n            {\n                \"institutionId\": \"{{thirdPartyId1}}\",\n                \"transactionIdentifier\": \"{{thirdPartyTranRef1}}\"\n            },\n            {\n                \"institutionId\": \"{{thirdPartyId2}}\",\n                \"transactionIdentifier\": \"{{thirdPartyTranRef2}}\"\n            },\n            {\n                \"institutionId\": \"{{thirdPartyId3}}\",\n                \"transactionIdentifier\": \"{{thirdPartyTranRef3}}\"\n            },\n            {\n                \"institutionId\": \"{{thirdPartyId4}}\",\n                \"transactionIdentifier\": \"{{thirdPartyTranRef4}}\"\n            }\n        ],\n        \"time\": \"{{reqDateTime}}\"\n    },\n    \"requestId\": \"{{requestId}}\",\n    \"reversalReason\": \"{{reversalReason}}\",\n    \"time\": \"{{adviceDateTime}}\",\n  \"thirdPartyIdentifiers\": [\n        {\n            \"institutionId\": \"{{thirdPartyId1}}\",\n            \"transactionIdentifier\": \"{{thirdPartyTranRef1}}\"\n        },\n        {\n            \"institutionId\": \"{{thirdPartyId2}}\",\n            \"transactionIdentifier\": \"{{thirdPartyTranRef2}}\"\n        },\n        {\n            \"institutionId\": \"{{thirdPartyId3}}\",\n            \"transactionIdentifier\": \"{{thirdPartyTranRef3}}\"\n        },\n        {\n            \"institutionId\": \"{{thirdPartyId4}}\",\n            \"transactionIdentifier\": \"{{thirdPartyTranRef4}}\"\n        }\n    ]\n}"
						},
						"description": "Test payment reversal"
					},
					"response": []
				}
			]
		},
		{
			"name": "Payment and Reversal",
			"description": "",
			"item": [
				{
					"name": "AccountLookupRequest",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": "tests[\"Status code is 200\"] = responseCode.code === 200;\n\nvar jsonData = JSON.parse(responseBody);\ntests[\"Correct id returned\"] = jsonData.id === environment.requestId;\n\n\npostman.setEnvironmentVariable(\"accountAmount\", jsonData.account.balance.amount);\n\npostman.setEnvironmentVariable(\"thirdPartyId1\", jsonData.thirdPartyIdentifiers[0].institutionId);\npostman.setEnvironmentVariable(\"thirdPartyTranRef1\", jsonData.thirdPartyIdentifiers[0].transactionIdentifier);\n\npostman.setEnvironmentVariable(\"thirdPartyId2\", jsonData.thirdPartyIdentifiers[1].institutionId);\npostman.setEnvironmentVariable(\"thirdPartyTranRef2\", jsonData.thirdPartyIdentifiers[1].transactionIdentifier);\n\npostman.setEnvironmentVariable(\"thirdPartyId3\", jsonData.thirdPartyIdentifiers[2].institutionId);\npostman.setEnvironmentVariable(\"thirdPartyTranRef3\", jsonData.thirdPartyIdentifiers[2].transactionIdentifier);\n\npostman.setEnvironmentVariable(\"thirdPartyId4\", jsonData.thirdPartyIdentifiers[3].institutionId);\npostman.setEnvironmentVariable(\"thirdPartyTranRef4\", jsonData.thirdPartyIdentifiers[3].transactionIdentifier);"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"exec": "function _p8(s) {\n        var p = (Math.random().toString(16)+\"000000000\").substr(2,8);\n        return s ? \"-\" + p.substr(0,4) + \"-\" + p.substr(4,4) : p ;\n    }\n\nfunction uuid() {\n    \n    return _p8() + _p8(true) + _p8(true) + _p8();\n}\n\nvar dateTime = new Date().toISOString();\npostman.setEnvironmentVariable(\"reqDateTime\", dateTime);\n\npostman.setEnvironmentVariable(\"rrn\",_p8());\npostman.setEnvironmentVariable(\"requestId\",uuid());\npostman.setEnvironmentVariable(\"senderTranRef\",_p8());\npostman.setEnvironmentVariable(\"clientTranRef\",_p8());\n"
							}
						}
					],
					"request": {
						"url": "{{url}}/accountLookups/{{requestId}}",
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Basic dXNlcm5hbWU6cGFzc3N3b3Jk",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"accountRef\": \"{{accountRef}}\",\n    \"client\": {\n        \"id\": \"{{clientId}}\",\n        \"name\": \"{{clientName}}\"\n    },\n    \"id\": \"{{requestId}}\",\n    \"originator\": {\n        \"institution\": {\n            \"id\": \"{{senderInstId}}\",\n            \"name\": \"{{senderInstName}}\"\n        },\n        \"merchant\": {\n            \"merchantId\": \"{{merchantId}}\",\n            \"merchantName\": {\n                \"city\": \"{{merchantCity}}\",\n                \"country\": \"{{merchantCountry}}\",\n                \"name\": \"{{merchantName}}\",\n                \"region\": \"{{merchantRegion}}\"\n            },\n            \"merchantType\": \"{{merchantType}}\"\n        },\n        \"terminalId\": \"{{terminalId}}\"\n    },\n    \"reciever\": {\n        \"id\": \"{{recieverId}}\",\n        \"name\": \"{{recieverName}}\"\n    },\n    \"settlementEntity\": {\n        \"id\": \"{{settlementEntityId}}\",\n        \"name\": \"{{settlementEntityName}}\"\n    },\n    \"thirdPartyIdentifiers\": [\n        {\n            \"institutionId\": \"{{senderInstId}}\",\n            \"transactionIdentifier\": \"{{senderTranRef}}\"\n        },\n        {\n            \"institutionId\": \"{{clientId}}\",\n            \"transactionIdentifier\": \"{{clientTranRef}}\"\n        }\n    ],\n    \"time\": \"{{reqDateTime}}\"\n}"
						},
						"description": ""
					},
					"response": []
				},
				{
					"name": "PaymentRequest",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": "tests[\"Status code is 200\"] = responseCode.code === 200;\n\nvar jsonData = JSON.parse(responseBody);\ntests[\"Correct id returned\"] = jsonData.id === environment.requestId;\n\n\npostman.setEnvironmentVariable(\"issuerReference\", jsonData.slipData.issuerReference);\n\npostman.setEnvironmentVariable(\"thirdPartyId1\", jsonData.thirdPartyIdentifiers[0].institutionId);\npostman.setEnvironmentVariable(\"thirdPartyTranRef1\", jsonData.thirdPartyIdentifiers[0].transactionIdentifier);\n\npostman.setEnvironmentVariable(\"thirdPartyId2\", jsonData.thirdPartyIdentifiers[1].institutionId);\npostman.setEnvironmentVariable(\"thirdPartyTranRef2\", jsonData.thirdPartyIdentifiers[1].transactionIdentifier);\n\npostman.setEnvironmentVariable(\"thirdPartyId3\", jsonData.thirdPartyIdentifiers[2].institutionId);\npostman.setEnvironmentVariable(\"thirdPartyTranRef3\", jsonData.thirdPartyIdentifiers[2].transactionIdentifier);\n\npostman.setEnvironmentVariable(\"thirdPartyId4\", jsonData.thirdPartyIdentifiers[3].institutionId);\npostman.setEnvironmentVariable(\"thirdPartyTranRef4\", jsonData.thirdPartyIdentifiers[3].transactionIdentifier);"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"exec": "function _p8(s) {\n        var p = (Math.random().toString(16)+\"000000000\").substr(2,8);\n        return s ? \"-\" + p.substr(0,4) + \"-\" + p.substr(4,4) : p ;\n    }\n\nfunction uuid() {\n    \n    return _p8() + _p8(true) + _p8(true) + _p8();\n}\n\nfunction halve(n) {\n    \n    return Math.floor(n/2);\n}\n\nvar dateTime = new Date().toISOString();\npostman.setEnvironmentVariable(\"reqDateTime\", dateTime);\n\nvar rrn = _p8()\npostman.setEnvironmentVariable(\"rrn\",rrn);\npostman.setEnvironmentVariable(\"requestRrn\",rrn);\n\npostman.setEnvironmentVariable(\"requestId\",uuid());\n\npostman.setEnvironmentVariable(\"requestAmount\",halve(environment.accountAmount));\n"
							}
						}
					],
					"request": {
						"url": "{{url}}/payments/{{requestId}}",
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Basic dXNlcm5hbWU6cGFzc3N3b3Jk",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"accountRef\": \"{{accountRef}}\",\n    \"client\": {\n        \"id\": \"{{clientId}}\",\n        \"name\": \"{{clientName}}\"\n    },\n    \"id\": \"{{requestId}}\",\n    \"originator\": {\n        \"institution\": {\n            \"id\": \"{{senderInstId}}\",\n            \"name\": \"{{senderInstName}}\"\n        },\n        \"merchant\": {\n            \"merchantId\": \"{{merchantId}}\",\n            \"merchantName\": {\n                \"city\": \"{{merchantCity}}\",\n                \"country\": \"{{merchantCountry}}\",\n                \"name\": \"{{merchantName}}\",\n                \"region\": \"{{merchantRegion}}\"\n            },\n            \"merchantType\": \"{{merchantType}}\"\n        },\n        \"terminalId\": \"{{terminalId}}\"\n    },\n    \"reciever\": {\n        \"id\": \"{{recieverId}}\",\n        \"name\": \"{{recieverName}}\"\n    },\n    \"requestAmount\": {\n        \"amount\": \"{{requestAmount}}\",\n        \"currency\": \"{{currency}}\"\n    },\n    \"settlementEntity\": {\n        \"id\": \"{{settlementEntityId}}\",\n        \"name\": \"{{settlementEntityName}}\"\n    },\n    \"thirdPartyIdentifiers\": [\n        {\n            \"institutionId\": \"{{senderInstId}}\",\n            \"transactionIdentifier\": \"{{senderTranRef}}\"\n        },\n        {\n            \"institutionId\": \"{{clientId}}\",\n            \"transactionIdentifier\": \"{{clientTranRef}}\"\n        }\n    ],\n    \"time\": \"{{reqDateTime}}\"\n}"
						},
						"description": "Test PaymentRequest"
					},
					"response": []
				},
				{
					"name": "PaymentReversal",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": "tests[\"Status code is 202\"] = responseCode.code === 202;\n\n\n"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"exec": "function _p8(s) {\n        var p = (Math.random().toString(16)+\"000000000\").substr(2,8);\n        return s ? \"-\" + p.substr(0,4) + \"-\" + p.substr(4,4) : p ;\n    }\n\nfunction uuid() {\n    \n    return _p8() + _p8(true) + _p8(true) + _p8();\n}\n\nfunction halve(n) {\n    \n    return Math.floor(n/2);\n}\n\nvar dateTime = new Date().toISOString();\npostman.setEnvironmentVariable(\"adviceDateTime\", dateTime);\n\npostman.setEnvironmentVariable(\"rrn\",_p8());\npostman.setEnvironmentVariable(\"adviceId\",uuid());\npostman.setEnvironmentVariable(\"tenderAmount\",halve(environment.requestAmount));\n"
							}
						}
					],
					"request": {
						"url": "{{url}}/payments/{{requestId}}/reversals/{{adviceId}}",
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Basic dXNlcm5hbWU6cGFzc3N3b3Jk",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"id\": \"{{adviceId}}\",\n    \"linkData\": \"{{linkData}}\",\n    \"paymentRequest\": {\n        \"accountRef\": \"{{accountRef}}\",\n        \"client\": {\n            \"id\": \"{{clientId}}\",\n            \"name\": \"{{clientName}}\"\n        },\n        \"id\": \"{{requestId}}\",\n        \"originator\": {\n            \"institution\": {\n                \"id\": \"{{senderInstId}}\",\n                \"name\": \"{{senderInstName}}\"\n            },\n            \"merchant\": {\n                \"merchantId\": \"{{merchantId}}\",\n                \"merchantName\": {\n                    \"city\": \"{{merchantCity}}\",\n                    \"country\": \"{{merchantCountry}}\",\n                    \"name\": \"{{merchantName}}\",\n                    \"region\": \"{{merchantRegion}}\"\n                },\n                \"merchantType\": \"{{merchantType}}\"\n            },\n            \"terminalId\": \"{{terminalId}}\"\n        },\n        \"reciever\": {\n            \"id\": \"{{recieverId}}\",\n            \"name\": \"{{recieverName}}\"\n        },\n        \"requestAmount\": {\n            \"amount\": \"{{requestAmount}}\",\n            \"currency\": \"{{currency}}\"\n        },\n        \"settlementEntity\": {\n            \"id\": \"{{settlementEntityId}}\",\n            \"name\": \"{{settlementEntityName}}\"\n        },\n        \"thirdPartyIdentifiers\": [\n            {\n                \"institutionId\": \"{{thirdPartyId1}}\",\n                \"transactionIdentifier\": \"{{thirdPartyTranRef1}}\"\n            },\n            {\n                \"institutionId\": \"{{thirdPartyId2}}\",\n                \"transactionIdentifier\": \"{{thirdPartyTranRef2}}\"\n            },\n            {\n                \"institutionId\": \"{{thirdPartyId3}}\",\n                \"transactionIdentifier\": \"{{thirdPartyTranRef3}}\"\n            },\n            {\n                \"institutionId\": \"{{thirdPartyId4}}\",\n                \"transactionIdentifier\": \"{{thirdPartyTranRef4}}\"\n            }\n        ],\n        \"time\": \"{{reqDateTime}}\"\n    },\n    \"requestId\": \"{{requestId}}\",\n    \"reversalReason\": \"{{reversalReason}}\",\n    \"time\": \"{{adviceDateTime}}\",\n  \"thirdPartyIdentifiers\": [\n        {\n            \"institutionId\": \"{{thirdPartyId1}}\",\n            \"transactionIdentifier\": \"{{thirdPartyTranRef1}}\"\n        },\n        {\n            \"institutionId\": \"{{thirdPartyId2}}\",\n            \"transactionIdentifier\": \"{{thirdPartyTranRef2}}\"\n        },\n        {\n            \"institutionId\": \"{{thirdPartyId3}}\",\n            \"transactionIdentifier\": \"{{thirdPartyTranRef3}}\"\n        },\n        {\n            \"institutionId\": \"{{thirdPartyId4}}\",\n            \"transactionIdentifier\": \"{{thirdPartyTranRef4}}\"\n        }\n    ]\n}"
						},
						"description": "Test payment reversal"
					},
					"response": []
				},
				{
					"name": "PaymentConfirmation",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": "tests[\"Status code is 400\"] = responseCode.code === 400;\n\n\nvar jsonData = JSON.parse(responseBody);\ntests[\"Correct error type\"] = jsonData.errorType === environment.accountAlreadySettledErrorType;"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"exec": "function _p8(s) {\n        var p = (Math.random().toString(16)+\"000000000\").substr(2,8);\n        return s ? \"-\" + p.substr(0,4) + \"-\" + p.substr(4,4) : p ;\n    }\n\nfunction uuid() {\n    \n    return _p8() + _p8(true) + _p8(true) + _p8();\n}\n\nfunction halve(n) {\n    \n    return Math.floor(n/2);\n}\n\nvar dateTime = new Date().toISOString();\npostman.setEnvironmentVariable(\"adviceDateTime\", dateTime);\n\npostman.setEnvironmentVariable(\"rrn\",_p8());\npostman.setEnvironmentVariable(\"adviceId\",uuid());\npostman.setEnvironmentVariable(\"tenderAmount\",halve(environment.requestAmount));\n"
							}
						}
					],
					"request": {
						"url": "{{url}}/payments/{{requestId}}/confirmations/{{adviceId}}",
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Basic dXNlcm5hbWU6cGFzc3N3b3Jk",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"id\" : \"{{adviceId}}\",\n  \"requestId\" : \"{{requestId}}\",\n  \"time\" : \"{{adviceDateTime}}\",\n  \"linkData\" : \"{{linkData}}\",\n  \"tenders\" : [ {\n    \"accountType\" : \"{{tenderAccountType}}\",\n    \"amount\" : {\n      \"amount\" : {{tenderAmount}},\n      \"currency\" : \"{{currency}}\"\n    },\n    \"cardNumber\" : \"{{tenderCardNumber}}1\",\n    \"reference\" : \"{{tenderRef}}1\",\n    \"tenderType\" : \"{{tenderTypeCash}}\"\n  }, {\n    \"accountType\" : \"DEFAULT\",\n    \"amount\" : {\n      \"amount\" : {{tenderAmount}},\n      \"currency\" : \"{{currency}}\"\n    },\n    \"cardNumber\" : \"{{tenderCardNumber}}2\",\n    \"reference\" : \"{{tenderRef}}2\",\n    \"tenderType\" : \"{{tenderTypeCard}}\"\n  } ],\n  \"thirdPartyIdentifiers\": [\n        {\n            \"institutionId\": \"{{thirdPartyId1}}\",\n            \"transactionIdentifier\": \"{{thirdPartyTranRef1}}\"\n        },\n        {\n            \"institutionId\": \"{{thirdPartyId2}}\",\n            \"transactionIdentifier\": \"{{thirdPartyTranRef2}}\"\n        },\n        {\n            \"institutionId\": \"{{thirdPartyId3}}\",\n            \"transactionIdentifier\": \"{{thirdPartyTranRef3}}\"\n        },\n        {\n            \"institutionId\": \"{{thirdPartyId4}}\",\n            \"transactionIdentifier\": \"{{thirdPartyTranRef4}}\"\n        }\n    ]\n}"
						},
						"description": "Test confirm payment"
					},
					"response": []
				}
			]
		},
		{
			"name": "Payment, Confirmation and Refund and Confirmation",
			"description": "",
			"item": [
				{
					"name": "AccountLookupRequest",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": "tests[\"Status code is 200\"] = responseCode.code === 200;\n\nvar jsonData = JSON.parse(responseBody);\ntests[\"Correct id returned\"] = jsonData.id === environment.requestId;\n\n\npostman.setEnvironmentVariable(\"accountAmount\", jsonData.account.balance.amount);\n\npostman.setEnvironmentVariable(\"thirdPartyId1\", jsonData.thirdPartyIdentifiers[0].institutionId);\npostman.setEnvironmentVariable(\"thirdPartyTranRef1\", jsonData.thirdPartyIdentifiers[0].transactionIdentifier);\n\npostman.setEnvironmentVariable(\"thirdPartyId2\", jsonData.thirdPartyIdentifiers[1].institutionId);\npostman.setEnvironmentVariable(\"thirdPartyTranRef2\", jsonData.thirdPartyIdentifiers[1].transactionIdentifier);\n\npostman.setEnvironmentVariable(\"thirdPartyId3\", jsonData.thirdPartyIdentifiers[2].institutionId);\npostman.setEnvironmentVariable(\"thirdPartyTranRef3\", jsonData.thirdPartyIdentifiers[2].transactionIdentifier);\n\npostman.setEnvironmentVariable(\"thirdPartyId4\", jsonData.thirdPartyIdentifiers[3].institutionId);\npostman.setEnvironmentVariable(\"thirdPartyTranRef4\", jsonData.thirdPartyIdentifiers[3].transactionIdentifier);"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"exec": "function _p8(s) {\n        var p = (Math.random().toString(16)+\"000000000\").substr(2,8);\n        return s ? \"-\" + p.substr(0,4) + \"-\" + p.substr(4,4) : p ;\n    }\n\nfunction uuid() {\n    \n    return _p8() + _p8(true) + _p8(true) + _p8();\n}\n\nvar dateTime = new Date().toISOString();\npostman.setEnvironmentVariable(\"reqDateTime\", dateTime);\n\npostman.setEnvironmentVariable(\"rrn\",_p8());\npostman.setEnvironmentVariable(\"requestId\",uuid());\npostman.setEnvironmentVariable(\"senderTranRef\",_p8());\npostman.setEnvironmentVariable(\"clientTranRef\",_p8());\n"
							}
						}
					],
					"request": {
						"url": "{{url}}/accountLookups/{{requestId}}",
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Basic dXNlcm5hbWU6cGFzc3N3b3Jk",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"accountRef\": \"{{accountRef}}\",\n    \"client\": {\n        \"id\": \"{{clientId}}\",\n        \"name\": \"{{clientName}}\"\n    },\n    \"id\": \"{{requestId}}\",\n    \"originator\": {\n        \"institution\": {\n            \"id\": \"{{senderInstId}}\",\n            \"name\": \"{{senderInstName}}\"\n        },\n        \"merchant\": {\n            \"merchantId\": \"{{merchantId}}\",\n            \"merchantName\": {\n                \"city\": \"{{merchantCity}}\",\n                \"country\": \"{{merchantCountry}}\",\n                \"name\": \"{{merchantName}}\",\n                \"region\": \"{{merchantRegion}}\"\n            },\n            \"merchantType\": \"{{merchantType}}\"\n        },\n        \"terminalId\": \"{{terminalId}}\"\n    },\n    \"reciever\": {\n        \"id\": \"{{recieverId}}\",\n        \"name\": \"{{recieverName}}\"\n    },\n    \"settlementEntity\": {\n        \"id\": \"{{settlementEntityId}}\",\n        \"name\": \"{{settlementEntityName}}\"\n    },\n    \"thirdPartyIdentifiers\": [\n        {\n            \"institutionId\": \"{{senderInstId}}\",\n            \"transactionIdentifier\": \"{{senderTranRef}}\"\n        },\n        {\n            \"institutionId\": \"{{clientId}}\",\n            \"transactionIdentifier\": \"{{clientTranRef}}\"\n        }\n    ],\n    \"time\": \"{{reqDateTime}}\"\n}"
						},
						"description": ""
					},
					"response": []
				},
				{
					"name": "PaymentRequest",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": "tests[\"Status code is 200\"] = responseCode.code === 200;\n\nvar jsonData = JSON.parse(responseBody);\ntests[\"Correct id returned\"] = jsonData.id === environment.requestId;\n\n\npostman.setEnvironmentVariable(\"issuerReference\", jsonData.slipData.issuerReference);\n\npostman.setEnvironmentVariable(\"thirdPartyId1\", jsonData.thirdPartyIdentifiers[0].institutionId);\npostman.setEnvironmentVariable(\"thirdPartyTranRef1\", jsonData.thirdPartyIdentifiers[0].transactionIdentifier);\n\npostman.setEnvironmentVariable(\"thirdPartyId2\", jsonData.thirdPartyIdentifiers[1].institutionId);\npostman.setEnvironmentVariable(\"thirdPartyTranRef2\", jsonData.thirdPartyIdentifiers[1].transactionIdentifier);\n\npostman.setEnvironmentVariable(\"thirdPartyId3\", jsonData.thirdPartyIdentifiers[2].institutionId);\npostman.setEnvironmentVariable(\"thirdPartyTranRef3\", jsonData.thirdPartyIdentifiers[2].transactionIdentifier);\n\npostman.setEnvironmentVariable(\"thirdPartyId4\", jsonData.thirdPartyIdentifiers[3].institutionId);\npostman.setEnvironmentVariable(\"thirdPartyTranRef4\", jsonData.thirdPartyIdentifiers[3].transactionIdentifier);"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"exec": "function _p8(s) {\n        var p = (Math.random().toString(16)+\"000000000\").substr(2,8);\n        return s ? \"-\" + p.substr(0,4) + \"-\" + p.substr(4,4) : p ;\n    }\n\nfunction uuid() {\n    \n    return _p8() + _p8(true) + _p8(true) + _p8();\n}\n\nfunction halve(n) {\n    \n    return Math.floor(n/2);\n}\n\nvar dateTime = new Date().toISOString();\npostman.setEnvironmentVariable(\"reqDateTime\", dateTime);\n\nvar rrn = _p8()\npostman.setEnvironmentVariable(\"rrn\",rrn);\npostman.setEnvironmentVariable(\"requestRrn\",rrn);\n\npostman.setEnvironmentVariable(\"requestId\",uuid());\n\npostman.setEnvironmentVariable(\"requestAmount\",halve(environment.accountAmount));\n"
							}
						}
					],
					"request": {
						"url": "{{url}}/payments/{{requestId}}",
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Basic dXNlcm5hbWU6cGFzc3N3b3Jk",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"accountRef\": \"{{accountRef}}\",\n    \"client\": {\n        \"id\": \"{{clientId}}\",\n        \"name\": \"{{clientName}}\"\n    },\n    \"id\": \"{{requestId}}\",\n    \"originator\": {\n        \"institution\": {\n            \"id\": \"{{senderInstId}}\",\n            \"name\": \"{{senderInstName}}\"\n        },\n        \"merchant\": {\n            \"merchantId\": \"{{merchantId}}\",\n            \"merchantName\": {\n                \"city\": \"{{merchantCity}}\",\n                \"country\": \"{{merchantCountry}}\",\n                \"name\": \"{{merchantName}}\",\n                \"region\": \"{{merchantRegion}}\"\n            },\n            \"merchantType\": \"{{merchantType}}\"\n        },\n        \"terminalId\": \"{{terminalId}}\"\n    },\n    \"reciever\": {\n        \"id\": \"{{recieverId}}\",\n        \"name\": \"{{recieverName}}\"\n    },\n    \"requestAmount\": {\n        \"amount\": \"{{requestAmount}}\",\n        \"currency\": \"{{currency}}\"\n    },\n    \"settlementEntity\": {\n        \"id\": \"{{settlementEntityId}}\",\n        \"name\": \"{{settlementEntityName}}\"\n    },\n    \"thirdPartyIdentifiers\": [\n        {\n            \"institutionId\": \"{{senderInstId}}\",\n            \"transactionIdentifier\": \"{{senderTranRef}}\"\n        },\n        {\n            \"institutionId\": \"{{clientId}}\",\n            \"transactionIdentifier\": \"{{clientTranRef}}\"\n        }\n    ],\n    \"time\": \"{{reqDateTime}}\"\n}"
						},
						"description": "Test PaymentRequest"
					},
					"response": []
				},
				{
					"name": "PaymentConfirmation",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": "tests[\"Status code is 202\"] = responseCode.code === 202;\n\n\n"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"exec": "function _p8(s) {\n        var p = (Math.random().toString(16)+\"000000000\").substr(2,8);\n        return s ? \"-\" + p.substr(0,4) + \"-\" + p.substr(4,4) : p ;\n    }\n\nfunction uuid() {\n    \n    return _p8() + _p8(true) + _p8(true) + _p8();\n}\n\nfunction halve(n) {\n    \n    return Math.floor(n/2);\n}\n\nvar dateTime = new Date().toISOString();\npostman.setEnvironmentVariable(\"adviceDateTime\", dateTime);\n\npostman.setEnvironmentVariable(\"rrn\",_p8());\npostman.setEnvironmentVariable(\"adviceId\",uuid());\npostman.setEnvironmentVariable(\"tenderAmount\",halve(environment.requestAmount));\n"
							}
						}
					],
					"request": {
						"url": "{{url}}/payments/{{requestId}}/confirmations/{{adviceId}}",
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Basic dXNlcm5hbWU6cGFzc3N3b3Jk",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"id\" : \"{{adviceId}}\",\n  \"requestId\" : \"{{requestId}}\",\n  \"time\" : \"{{adviceDateTime}}\",\n  \"linkData\" : \"{{linkData}}\",\n  \"tenders\" : [ {\n    \"accountType\" : \"{{tenderAccountType}}\",\n    \"amount\" : {\n      \"amount\" : {{tenderAmount}},\n      \"currency\" : \"{{currency}}\"\n    },\n    \"cardNumber\" : \"{{tenderCardNumber}}1\",\n    \"reference\" : \"{{tenderRef}}1\",\n    \"tenderType\" : \"{{tenderTypeCash}}\"\n  }, {\n    \"accountType\" : \"DEFAULT\",\n    \"amount\" : {\n      \"amount\" : {{tenderAmount}},\n      \"currency\" : \"{{currency}}\"\n    },\n    \"cardNumber\" : \"{{tenderCardNumber}}2\",\n    \"reference\" : \"{{tenderRef}}2\",\n    \"tenderType\" : \"{{tenderTypeCard}}\"\n  } ],\n  \"thirdPartyIdentifiers\": [\n        {\n            \"institutionId\": \"{{thirdPartyId1}}\",\n            \"transactionIdentifier\": \"{{thirdPartyTranRef1}}\"\n        },\n        {\n            \"institutionId\": \"{{thirdPartyId2}}\",\n            \"transactionIdentifier\": \"{{thirdPartyTranRef2}}\"\n        },\n        {\n            \"institutionId\": \"{{thirdPartyId3}}\",\n            \"transactionIdentifier\": \"{{thirdPartyTranRef3}}\"\n        },\n        {\n            \"institutionId\": \"{{thirdPartyId4}}\",\n            \"transactionIdentifier\": \"{{thirdPartyTranRef4}}\"\n        }\n    ]\n}"
						},
						"description": "Test confirm payment"
					},
					"response": []
				},
				{
					"name": "RefundRequest",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": "tests[\"Status code is 200\"] = responseCode.code === 200;\n\nvar jsonData = JSON.parse(responseBody);\ntests[\"Correct id returned\"] = jsonData.id === environment.requestId;\n\n\n\npostman.setEnvironmentVariable(\"thirdPartyId1\", jsonData.thirdPartyIdentifiers[0].institutionId);\npostman.setEnvironmentVariable(\"thirdPartyTranRef1\", jsonData.thirdPartyIdentifiers[0].transactionIdentifier);\n\npostman.setEnvironmentVariable(\"thirdPartyId2\", jsonData.thirdPartyIdentifiers[1].institutionId);\npostman.setEnvironmentVariable(\"thirdPartyTranRef2\", jsonData.thirdPartyIdentifiers[1].transactionIdentifier);\n\npostman.setEnvironmentVariable(\"thirdPartyId3\", jsonData.thirdPartyIdentifiers[2].institutionId);\npostman.setEnvironmentVariable(\"thirdPartyTranRef3\", jsonData.thirdPartyIdentifiers[2].transactionIdentifier);\n\npostman.setEnvironmentVariable(\"thirdPartyId4\", jsonData.thirdPartyIdentifiers[3].institutionId);\npostman.setEnvironmentVariable(\"thirdPartyTranRef4\", jsonData.thirdPartyIdentifiers[3].transactionIdentifier);\n"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"exec": "function _p8(s) {\n        var p = (Math.random().toString(16)+\"000000000\").substr(2,8);\n        return s ? \"-\" + p.substr(0,4) + \"-\" + p.substr(4,4) : p ;\n    }\n\nfunction uuid() {\n    \n    return _p8() + _p8(true) + _p8(true) + _p8();\n}\n\nfunction halve(n) {\n    \n    return Math.floor(n/2);\n}\n\nvar dateTime = new Date().toISOString();\npostman.setEnvironmentVariable(\"reqDateTime\", dateTime);\n\nvar rrn = _p8()\npostman.setEnvironmentVariable(\"rrn\",rrn);\npostman.setEnvironmentVariable(\"requestRrn\",rrn);\n\npostman.setEnvironmentVariable(\"requestId\",uuid());\n\npostman.setEnvironmentVariable(\"requestAmount\",halve(environment.accountAmount));\n"
							}
						}
					],
					"request": {
						"url": "{{url}}/refunds/{{requestId}}",
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Basic dXNlcm5hbWU6cGFzc3N3b3Jk",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"client\": {\n        \"id\": \"{{clientId}}\",\n        \"name\": \"{{clientName}}\"\n    },\n    \"id\": \"{{requestId}}\",\n    \"issuerReference\": \"{{issuerReference}}\",\n    \"originator\": {\n        \"institution\": {\n            \"id\": \"{{senderInstId}}\",\n            \"name\": \"{{senderInstName}}\"\n        },\n        \"merchant\": {\n            \"merchantId\": \"{{merchantId}}\",\n            \"merchantName\": {\n                \"city\": \"{{merchantCity}}\",\n                \"country\": \"{{merchantCountry}}\",\n                \"name\": \"{{merchantName}}\",\n                \"region\": \"{{merchantRegion}}\"\n            },\n            \"merchantType\": \"{{merchantType}}\"\n        },\n        \"terminalId\": \"{{terminalId}}\"\n    },\n    \"reciever\": {\n        \"id\": \"{{recieverId}}\",\n        \"name\": \"{{recieverName}}\"\n    },\n    \"refundReason\": \"{{refundReason}}\",\n    \"settlementEntity\": {\n        \"id\": \"{{settlementEntityId}}\",\n        \"name\": \"{{settlementEntityName}}\"\n    },\n    \"thirdPartyIdentifiers\": [\n        {\n            \"institutionId\": \"{{senderInstId}}\",\n            \"transactionIdentifier\": \"{{senderTranRef}}\"\n        },\n        {\n            \"institutionId\": \"{{clientId}}\",\n            \"transactionIdentifier\": \"{{clientTranRef}}\"\n        }\n    ],\n    \"time\": \"{{reqDateTime}}\"\n}"
						},
						"description": "Test RefundRequest"
					},
					"response": []
				},
				{
					"name": "RefundConfirmation",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": "tests[\"Status code is 202\"] = responseCode.code === 202;\n\n\n"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"exec": "function _p8(s) {\n        var p = (Math.random().toString(16)+\"000000000\").substr(2,8);\n        return s ? \"-\" + p.substr(0,4) + \"-\" + p.substr(4,4) : p ;\n    }\n\nfunction uuid() {\n    \n    return _p8() + _p8(true) + _p8(true) + _p8();\n}\n\nvar dateTime = new Date().toISOString();\npostman.setEnvironmentVariable(\"adviceDateTime\", dateTime);\n\npostman.setEnvironmentVariable(\"adviceId\",uuid());\n\n"
							}
						}
					],
					"request": {
						"url": "{{url}}/refunds/{{requestId}}/confirmations/{{adviceId}}",
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Basic dXNlcm5hbWU6cGFzc3N3b3Jk",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"id\" : \"{{adviceId}}\",\n  \"requestId\" : \"{{requestId}}\",\n  \"time\" : \"{{adviceDateTime}}\",\n  \"thirdPartyIdentifiers\": [\n        {\n            \"institutionId\": \"{{thirdPartyId1}}\",\n            \"transactionIdentifier\": \"{{thirdPartyTranRef1}}\"\n        },\n        {\n            \"institutionId\": \"{{thirdPartyId2}}\",\n            \"transactionIdentifier\": \"{{thirdPartyTranRef2}}\"\n        },\n        {\n            \"institutionId\": \"{{thirdPartyId3}}\",\n            \"transactionIdentifier\": \"{{thirdPartyTranRef3}}\"\n        },\n        {\n            \"institutionId\": \"{{thirdPartyId4}}\",\n            \"transactionIdentifier\": \"{{thirdPartyTranRef4}}\"\n        }\n    ]\n}"
						},
						"description": "Test Refund confirmation"
					},
					"response": []
				},
				{
					"name": "RefundReversal",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": "tests[\"Status code is 400\"] = responseCode.code === 400;\n\n\nvar jsonData = JSON.parse(responseBody);\ntests[\"Correct error type\"] = jsonData.errorType === environment.accountAlreadySettledErrorType;"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"exec": "function _p8(s) {\n        var p = (Math.random().toString(16)+\"000000000\").substr(2,8);\n        return s ? \"-\" + p.substr(0,4) + \"-\" + p.substr(4,4) : p ;\n    }\n\nfunction uuid() {\n    \n    return _p8() + _p8(true) + _p8(true) + _p8();\n}\n\nfunction halve(n) {\n    \n    return Math.floor(n/2);\n}\n\nvar dateTime = new Date().toISOString();\npostman.setEnvironmentVariable(\"adviceDateTime\", dateTime);\n\npostman.setEnvironmentVariable(\"rrn\",_p8());\npostman.setEnvironmentVariable(\"adviceId\",uuid());\npostman.setEnvironmentVariable(\"tenderAmount\",halve(environment.requestAmount));\n"
							}
						}
					],
					"request": {
						"url": "{{url}}/refunds/{{requestId}}/reversals/{{adviceId}}",
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Basic dXNlcm5hbWU6cGFzc3N3b3Jk",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"id\": \"{{adviceId}}\",\n    \"refundRequest\": {\n        \"client\": {\n            \"id\": \"{{clientId}}\",\n            \"name\": \"{{clientName}}\"\n        },\n        \"id\": \"{{requestId}}\",\n        \"issuerReference\": \"{{issuerReference}}\",\n        \"originator\": {\n            \"institution\": {\n                \"id\": \"{{senderInstId}}\",\n                \"name\": \"{{senderInstName}}\"\n            },\n            \"merchant\": {\n                \"merchantId\": \"{{merchantId}}\",\n                \"merchantName\": {\n                    \"city\": \"{{merchantCity}}\",\n                    \"country\": \"{{merchantCountry}}\",\n                    \"name\": \"{{merchantName}}\",\n                    \"region\": \"{{merchantRegion}}\"\n                },\n                \"merchantType\": \"{{merchantType}}\"\n            },\n            \"terminalId\": \"{{terminalId}}\"\n        },\n        \"reciever\": {\n            \"id\": \"{{recieverId}}\",\n            \"name\": \"{{recieverName}}\"\n        },\n        \"refundReason\": \"{{refundReason}}\",\n        \"settlementEntity\": {\n            \"id\": \"{{settlementEntityId}}\",\n            \"name\": \"{{settlementEntityName}}\"\n        },\n        \"thirdPartyIdentifiers\": [\n            {\n                \"institutionId\": \"{{senderInstId}}\",\n                \"transactionIdentifier\": \"{{senderTranRef}}\"\n            },\n            {\n                \"institutionId\": \"{{clientId}}\",\n                \"transactionIdentifier\": \"{{clientTranRef}}\"\n            }\n        ],\n        \"time\": \"{{reqDateTime}}\"\n    },\n    \"requestId\": \"{{requestId}}\",\n    \"reversalReason\": \"{{reversalReason}}\",\n    \"thirdPartyIdentifiers\": [\n        {\n            \"institutionId\": \"{{thirdPartyId1}}\",\n            \"transactionIdentifier\": \"{{thirdPartyTranRef1}}\"\n        },\n        {\n            \"institutionId\": \"{{thirdPartyId2}}\",\n            \"transactionIdentifier\": \"{{thirdPartyTranRef2}}\"\n        },\n        {\n            \"institutionId\": \"{{thirdPartyId3}}\",\n            \"transactionIdentifier\": \"{{thirdPartyTranRef3}}\"\n        },\n        {\n            \"institutionId\": \"{{thirdPartyId4}}\",\n            \"transactionIdentifier\": \"{{thirdPartyTranRef4}}\"\n        }\n    ],\n    \"time\": \"{{adviceDateTime}}\"\n}"
						},
						"description": "Test refund reversal"
					},
					"response": []
				}
			]
		},
		{
			"name": "Payment, Confirmation and Refund and Reversal",
			"description": "",
			"item": [
				{
					"name": "AccountLookupRequest",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": "tests[\"Status code is 200\"] = responseCode.code === 200;\n\nvar jsonData = JSON.parse(responseBody);\ntests[\"Correct id returned\"] = jsonData.id === environment.requestId;\n\n\npostman.setEnvironmentVariable(\"accountAmount\", jsonData.account.balance.amount);\n\npostman.setEnvironmentVariable(\"thirdPartyId1\", jsonData.thirdPartyIdentifiers[0].institutionId);\npostman.setEnvironmentVariable(\"thirdPartyTranRef1\", jsonData.thirdPartyIdentifiers[0].transactionIdentifier);\n\npostman.setEnvironmentVariable(\"thirdPartyId2\", jsonData.thirdPartyIdentifiers[1].institutionId);\npostman.setEnvironmentVariable(\"thirdPartyTranRef2\", jsonData.thirdPartyIdentifiers[1].transactionIdentifier);\n\npostman.setEnvironmentVariable(\"thirdPartyId3\", jsonData.thirdPartyIdentifiers[2].institutionId);\npostman.setEnvironmentVariable(\"thirdPartyTranRef3\", jsonData.thirdPartyIdentifiers[2].transactionIdentifier);\n\npostman.setEnvironmentVariable(\"thirdPartyId4\", jsonData.thirdPartyIdentifiers[3].institutionId);\npostman.setEnvironmentVariable(\"thirdPartyTranRef4\", jsonData.thirdPartyIdentifiers[3].transactionIdentifier);"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"exec": "function _p8(s) {\n        var p = (Math.random().toString(16)+\"000000000\").substr(2,8);\n        return s ? \"-\" + p.substr(0,4) + \"-\" + p.substr(4,4) : p ;\n    }\n\nfunction uuid() {\n    \n    return _p8() + _p8(true) + _p8(true) + _p8();\n}\n\nvar dateTime = new Date().toISOString();\npostman.setEnvironmentVariable(\"reqDateTime\", dateTime);\n\npostman.setEnvironmentVariable(\"rrn\",_p8());\npostman.setEnvironmentVariable(\"requestId\",uuid());\npostman.setEnvironmentVariable(\"senderTranRef\",_p8());\n"
							}
						}
					],
					"request": {
						"url": "{{url}}/accountLookups/{{requestId}}",
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Basic dXNlcm5hbWU6cGFzc3N3b3Jk",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"accountRef\": \"{{accountRef}}\",\n    \"client\": {\n        \"id\": \"{{clientId}}\",\n        \"name\": \"{{clientName}}\"\n    },\n    \"id\": \"{{requestId}}\",\n    \"originator\": {\n        \"institution\": {\n            \"id\": \"{{senderInstId}}\",\n            \"name\": \"{{senderInstName}}\"\n        },\n        \"merchant\": {\n            \"merchantId\": \"{{merchantId}}\",\n            \"merchantName\": {\n                \"city\": \"{{merchantCity}}\",\n                \"country\": \"{{merchantCountry}}\",\n                \"name\": \"{{merchantName}}\",\n                \"region\": \"{{merchantRegion}}\"\n            },\n            \"merchantType\": \"{{merchantType}}\"\n        },\n        \"terminalId\": \"{{terminalId}}\"\n    },\n    \"reciever\": {\n        \"id\": \"{{recieverId}}\",\n        \"name\": \"{{recieverName}}\"\n    },\n    \"settlementEntity\": {\n        \"id\": \"{{settlementEntityId}}\",\n        \"name\": \"{{settlementEntityName}}\"\n    },\n    \"thirdPartyIdentifiers\": [\n        {\n            \"institutionId\": \"{{senderInstId}}\",\n            \"transactionIdentifier\": \"{{senderTranRef}}\"\n        },\n        {\n            \"institutionId\": \"{{clientId}}\",\n            \"transactionIdentifier\": \"{{clientTranRef}}\"\n        }\n    ],\n    \"time\": \"{{reqDateTime}}\"\n}"
						},
						"description": ""
					},
					"response": []
				},
				{
					"name": "PaymentRequest",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": "tests[\"Status code is 200\"] = responseCode.code === 200;\n\nvar jsonData = JSON.parse(responseBody);\ntests[\"Correct id returned\"] = jsonData.id === environment.requestId;\n\n\npostman.setEnvironmentVariable(\"issuerReference\", jsonData.slipData.issuerReference);\n\npostman.setEnvironmentVariable(\"thirdPartyId1\", jsonData.thirdPartyIdentifiers[0].institutionId);\npostman.setEnvironmentVariable(\"thirdPartyTranRef1\", jsonData.thirdPartyIdentifiers[0].transactionIdentifier);\n\npostman.setEnvironmentVariable(\"thirdPartyId2\", jsonData.thirdPartyIdentifiers[1].institutionId);\npostman.setEnvironmentVariable(\"thirdPartyTranRef2\", jsonData.thirdPartyIdentifiers[1].transactionIdentifier);\n\npostman.setEnvironmentVariable(\"thirdPartyId3\", jsonData.thirdPartyIdentifiers[2].institutionId);\npostman.setEnvironmentVariable(\"thirdPartyTranRef3\", jsonData.thirdPartyIdentifiers[2].transactionIdentifier);\n\npostman.setEnvironmentVariable(\"thirdPartyId4\", jsonData.thirdPartyIdentifiers[3].institutionId);\npostman.setEnvironmentVariable(\"thirdPartyTranRef4\", jsonData.thirdPartyIdentifiers[3].transactionIdentifier);"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"exec": "function _p8(s) {\n        var p = (Math.random().toString(16)+\"000000000\").substr(2,8);\n        return s ? \"-\" + p.substr(0,4) + \"-\" + p.substr(4,4) : p ;\n    }\n\nfunction uuid() {\n    \n    return _p8() + _p8(true) + _p8(true) + _p8();\n}\n\nfunction halve(n) {\n    \n    return Math.floor(n/2);\n}\n\nvar dateTime = new Date().toISOString();\npostman.setEnvironmentVariable(\"reqDateTime\", dateTime);\n\nvar rrn = _p8()\npostman.setEnvironmentVariable(\"rrn\",rrn);\npostman.setEnvironmentVariable(\"requestRrn\",rrn);\n\npostman.setEnvironmentVariable(\"requestId\",uuid());\n\npostman.setEnvironmentVariable(\"requestAmount\",halve(environment.accountAmount));\n"
							}
						}
					],
					"request": {
						"url": "{{url}}/payments/{{requestId}}",
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Basic dXNlcm5hbWU6cGFzc3N3b3Jk",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"accountRef\": \"{{accountRef}}\",\n    \"client\": {\n        \"id\": \"{{clientId}}\",\n        \"name\": \"{{clientName}}\"\n    },\n    \"id\": \"{{requestId}}\",\n    \"originator\": {\n        \"institution\": {\n            \"id\": \"{{senderInstId}}\",\n            \"name\": \"{{senderInstName}}\"\n        },\n        \"merchant\": {\n            \"merchantId\": \"{{merchantId}}\",\n            \"merchantName\": {\n                \"city\": \"{{merchantCity}}\",\n                \"country\": \"{{merchantCountry}}\",\n                \"name\": \"{{merchantName}}\",\n                \"region\": \"{{merchantRegion}}\"\n            },\n            \"merchantType\": \"{{merchantType}}\"\n        },\n        \"terminalId\": \"{{terminalId}}\"\n    },\n    \"reciever\": {\n        \"id\": \"{{recieverId}}\",\n        \"name\": \"{{recieverName}}\"\n    },\n    \"requestAmount\": {\n        \"amount\": \"{{requestAmount}}\",\n        \"currency\": \"{{currency}}\"\n    },\n    \"settlementEntity\": {\n        \"id\": \"{{settlementEntityId}}\",\n        \"name\": \"{{settlementEntityName}}\"\n    },\n    \"thirdPartyIdentifiers\": [\n        {\n            \"institutionId\": \"{{senderInstId}}\",\n            \"transactionIdentifier\": \"{{senderTranRef}}\"\n        },\n        {\n            \"institutionId\": \"{{clientId}}\",\n            \"transactionIdentifier\": \"{{clientTranRef}}\"\n        }\n    ],\n    \"time\": \"{{reqDateTime}}\"\n}"
						},
						"description": "Test PaymentRequest"
					},
					"response": []
				},
				{
					"name": "PaymentConfirmation",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": "tests[\"Status code is 202\"] = responseCode.code === 202;\n\n\n"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"exec": "function _p8(s) {\n        var p = (Math.random().toString(16)+\"000000000\").substr(2,8);\n        return s ? \"-\" + p.substr(0,4) + \"-\" + p.substr(4,4) : p ;\n    }\n\nfunction uuid() {\n    \n    return _p8() + _p8(true) + _p8(true) + _p8();\n}\n\nfunction halve(n) {\n    \n    return Math.floor(n/2);\n}\n\nvar dateTime = new Date().toISOString();\npostman.setEnvironmentVariable(\"adviceDateTime\", dateTime);\n\npostman.setEnvironmentVariable(\"rrn\",_p8());\npostman.setEnvironmentVariable(\"adviceId\",uuid());\npostman.setEnvironmentVariable(\"tenderAmount\",halve(environment.requestAmount));\n"
							}
						}
					],
					"request": {
						"url": "{{url}}/payments/{{requestId}}/confirmations/{{adviceId}}",
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Basic dXNlcm5hbWU6cGFzc3N3b3Jk",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"id\" : \"{{adviceId}}\",\n  \"requestId\" : \"{{requestId}}\",\n  \"time\" : \"{{adviceDateTime}}\",\n  \"linkData\" : \"{{linkData}}\",\n  \"tenders\" : [ {\n    \"accountType\" : \"{{tenderAccountType}}\",\n    \"amount\" : {\n      \"amount\" : {{tenderAmount}},\n      \"currency\" : \"{{currency}}\"\n    },\n    \"cardNumber\" : \"{{tenderCardNumber}}1\",\n    \"reference\" : \"{{tenderRef}}1\",\n    \"tenderType\" : \"{{tenderTypeCash}}\"\n  }, {\n    \"accountType\" : \"DEFAULT\",\n    \"amount\" : {\n      \"amount\" : {{tenderAmount}},\n      \"currency\" : \"{{currency}}\"\n    },\n    \"cardNumber\" : \"{{tenderCardNumber}}2\",\n    \"reference\" : \"{{tenderRef}}2\",\n    \"tenderType\" : \"{{tenderTypeCard}}\"\n  } ],\n  \"thirdPartyIdentifiers\": [\n        {\n            \"institutionId\": \"{{thirdPartyId1}}\",\n            \"transactionIdentifier\": \"{{thirdPartyTranRef1}}\"\n        },\n        {\n            \"institutionId\": \"{{thirdPartyId2}}\",\n            \"transactionIdentifier\": \"{{thirdPartyTranRef2}}\"\n        },\n        {\n            \"institutionId\": \"{{thirdPartyId3}}\",\n            \"transactionIdentifier\": \"{{thirdPartyTranRef3}}\"\n        },\n        {\n            \"institutionId\": \"{{thirdPartyId4}}\",\n            \"transactionIdentifier\": \"{{thirdPartyTranRef4}}\"\n        }\n    ]\n}"
						},
						"description": "Test confirm payment"
					},
					"response": []
				},
				{
					"name": "RefundRequest",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": "tests[\"Status code is 200\"] = responseCode.code === 200;\n\nvar jsonData = JSON.parse(responseBody);\ntests[\"Correct id returned\"] = jsonData.id === environment.requestId;\n\n\n\n\npostman.setEnvironmentVariable(\"thirdPartyId1\", jsonData.thirdPartyIdentifiers[0].institutionId);\npostman.setEnvironmentVariable(\"thirdPartyTranRef1\", jsonData.thirdPartyIdentifiers[0].transactionIdentifier);\n\npostman.setEnvironmentVariable(\"thirdPartyId2\", jsonData.thirdPartyIdentifiers[1].institutionId);\npostman.setEnvironmentVariable(\"thirdPartyTranRef2\", jsonData.thirdPartyIdentifiers[1].transactionIdentifier);\n\npostman.setEnvironmentVariable(\"thirdPartyId3\", jsonData.thirdPartyIdentifiers[2].institutionId);\npostman.setEnvironmentVariable(\"thirdPartyTranRef3\", jsonData.thirdPartyIdentifiers[2].transactionIdentifier);\n\npostman.setEnvironmentVariable(\"thirdPartyId4\", jsonData.thirdPartyIdentifiers[3].institutionId);\npostman.setEnvironmentVariable(\"thirdPartyTranRef4\", jsonData.thirdPartyIdentifiers[3].transactionIdentifier);"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"exec": "function _p8(s) {\n        var p = (Math.random().toString(16)+\"000000000\").substr(2,8);\n        return s ? \"-\" + p.substr(0,4) + \"-\" + p.substr(4,4) : p ;\n    }\n\nfunction uuid() {\n    \n    return _p8() + _p8(true) + _p8(true) + _p8();\n}\n\nfunction halve(n) {\n    \n    return Math.floor(n/2);\n}\n\nvar dateTime = new Date().toISOString();\npostman.setEnvironmentVariable(\"reqDateTime\", dateTime);\n\nvar rrn = _p8()\npostman.setEnvironmentVariable(\"rrn\",rrn);\npostman.setEnvironmentVariable(\"requestRrn\",rrn);\n\npostman.setEnvironmentVariable(\"requestId\",uuid());\n\npostman.setEnvironmentVariable(\"requestAmount\",halve(environment.accountAmount));\n"
							}
						}
					],
					"request": {
						"url": "{{url}}/refunds/{{requestId}}",
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Basic dXNlcm5hbWU6cGFzc3N3b3Jk",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"client\": {\n        \"id\": \"{{clientId}}\",\n        \"name\": \"{{clientName}}\"\n    },\n    \"id\": \"{{requestId}}\",\n    \"issuerReference\": \"{{issuerReference}}\",\n    \"originator\": {\n        \"institution\": {\n            \"id\": \"{{senderInstId}}\",\n            \"name\": \"{{senderInstName}}\"\n        },\n        \"merchant\": {\n            \"merchantId\": \"{{merchantId}}\",\n            \"merchantName\": {\n                \"city\": \"{{merchantCity}}\",\n                \"country\": \"{{merchantCountry}}\",\n                \"name\": \"{{merchantName}}\",\n                \"region\": \"{{merchantRegion}}\"\n            },\n            \"merchantType\": \"{{merchantType}}\"\n        },\n        \"terminalId\": \"{{terminalId}}\"\n    },\n    \"reciever\": {\n        \"id\": \"{{recieverId}}\",\n        \"name\": \"{{recieverName}}\"\n    },\n    \"refundReason\": \"{{refundReason}}\",\n    \"settlementEntity\": {\n        \"id\": \"{{settlementEntityId}}\",\n        \"name\": \"{{settlementEntityName}}\"\n    },\n    \"thirdPartyIdentifiers\": [\n        {\n            \"institutionId\": \"{{senderInstId}}\",\n            \"transactionIdentifier\": \"{{senderTranRef}}\"\n        },\n        {\n            \"institutionId\": \"{{clientId}}\",\n            \"transactionIdentifier\": \"{{clientTranRef}}\"\n        }\n    ],\n    \"time\": \"{{reqDateTime}}\"\n}"
						},
						"description": "Test RefundRequest"
					},
					"response": []
				},
				{
					"name": "RefundReversal",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": "tests[\"Status code is 202\"] = responseCode.code === 202;\n\n\n"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"exec": "function _p8(s) {\n        var p = (Math.random().toString(16)+\"000000000\").substr(2,8);\n        return s ? \"-\" + p.substr(0,4) + \"-\" + p.substr(4,4) : p ;\n    }\n\nfunction uuid() {\n    \n    return _p8() + _p8(true) + _p8(true) + _p8();\n}\n\nfunction halve(n) {\n    \n    return Math.floor(n/2);\n}\n\nvar dateTime = new Date().toISOString();\npostman.setEnvironmentVariable(\"adviceDateTime\", dateTime);\n\npostman.setEnvironmentVariable(\"rrn\",_p8());\npostman.setEnvironmentVariable(\"adviceId\",uuid());\npostman.setEnvironmentVariable(\"tenderAmount\",halve(environment.requestAmount));\n"
							}
						}
					],
					"request": {
						"url": "{{url}}/refunds/{{requestId}}/reversals/{{adviceId}}",
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Basic dXNlcm5hbWU6cGFzc3N3b3Jk",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"id\": \"{{adviceId}}\",\n    \"refundRequest\": {\n        \"client\": {\n            \"id\": \"{{clientId}}\",\n            \"name\": \"{{clientName}}\"\n        },\n        \"id\": \"{{requestId}}\",\n        \"issuerReference\": \"{{issuerReference}}\",\n        \"originator\": {\n            \"institution\": {\n                \"id\": \"{{senderInstId}}\",\n                \"name\": \"{{senderInstName}}\"\n            },\n            \"merchant\": {\n                \"merchantId\": \"{{merchantId}}\",\n                \"merchantName\": {\n                    \"city\": \"{{merchantCity}}\",\n                    \"country\": \"{{merchantCountry}}\",\n                    \"name\": \"{{merchantName}}\",\n                    \"region\": \"{{merchantRegion}}\"\n                },\n                \"merchantType\": \"{{merchantType}}\"\n            },\n            \"terminalId\": \"{{terminalId}}\"\n        },\n        \"reciever\": {\n            \"id\": \"{{recieverId}}\",\n            \"name\": \"{{recieverName}}\"\n        },\n        \"refundReason\": \"{{refundReason}}\",\n        \"settlementEntity\": {\n            \"id\": \"{{settlementEntityId}}\",\n            \"name\": \"{{settlementEntityName}}\"\n        },\n        \"thirdPartyIdentifiers\": [\n            {\n                \"institutionId\": \"{{senderInstId}}\",\n                \"transactionIdentifier\": \"{{senderTranRef}}\"\n            },\n            {\n                \"institutionId\": \"{{clientId}}\",\n                \"transactionIdentifier\": \"{{clientTranRef}}\"\n            }\n        ],\n        \"time\": \"{{reqDateTime}}\"\n    },\n    \"requestId\": \"{{requestId}}\",\n    \"reversalReason\": \"{{reversalReason}}\",\n    \"thirdPartyIdentifiers\": [\n        {\n            \"institutionId\": \"{{thirdPartyId1}}\",\n            \"transactionIdentifier\": \"{{thirdPartyTranRef1}}\"\n        },\n        {\n            \"institutionId\": \"{{thirdPartyId2}}\",\n            \"transactionIdentifier\": \"{{thirdPartyTranRef2}}\"\n        },\n        {\n            \"institutionId\": \"{{thirdPartyId3}}\",\n            \"transactionIdentifier\": \"{{thirdPartyTranRef3}}\"\n        },\n        {\n            \"institutionId\": \"{{thirdPartyId4}}\",\n            \"transactionIdentifier\": \"{{thirdPartyTranRef4}}\"\n        }\n    ],\n    \"time\": \"{{adviceDateTime}}\"\n}"
						},
						"description": "Test refund reversal"
					},
					"response": []
				},
				{
					"name": "RefundConfirmation",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": "tests[\"Status code is 400\"] = responseCode.code === 400;\n\n\nvar jsonData = JSON.parse(responseBody);\ntests[\"Correct error type\"] = jsonData.errorType === environment.accountAlreadySettledErrorType;"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"exec": "function _p8(s) {\n        var p = (Math.random().toString(16)+\"000000000\").substr(2,8);\n        return s ? \"-\" + p.substr(0,4) + \"-\" + p.substr(4,4) : p ;\n    }\n\nfunction uuid() {\n    \n    return _p8() + _p8(true) + _p8(true) + _p8();\n}\n\nvar dateTime = new Date().toISOString();\npostman.setEnvironmentVariable(\"adviceDateTime\", dateTime);\n\npostman.setEnvironmentVariable(\"adviceId\",uuid());\n\n"
							}
						}
					],
					"request": {
						"url": "{{url}}/refunds/{{requestId}}/confirmations/{{adviceId}}",
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Basic dXNlcm5hbWU6cGFzc3N3b3Jk",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"id\" : \"{{adviceId}}\",\n  \"requestId\" : \"{{requestId}}\",\n  \"time\" : \"{{adviceDateTime}}\",\n  \"thirdPartyIdentifiers\": [\n        {\n            \"institutionId\": \"{{thirdPartyId1}}\",\n            \"transactionIdentifier\": \"{{thirdPartyTranRef1}}\"\n        },\n        {\n            \"institutionId\": \"{{thirdPartyId2}}\",\n            \"transactionIdentifier\": \"{{thirdPartyTranRef2}}\"\n        },\n        {\n            \"institutionId\": \"{{thirdPartyId3}}\",\n            \"transactionIdentifier\": \"{{thirdPartyTranRef3}}\"\n        },\n        {\n            \"institutionId\": \"{{thirdPartyId4}}\",\n            \"transactionIdentifier\": \"{{thirdPartyTranRef4}}\"\n        }\n    ]\n}"
						},
						"description": "Test Refund confirmation"
					},
					"response": []
				}
			]
		}
	]
}